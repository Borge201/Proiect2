;/*******************************************************
;This program was created by the CodeWizardAVR V3.29
;Automatic Program Generator
;© Copyright 1998-2016 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project : Proiect2
;Version :
;Date    : 20/03/2023
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega164
;Program type            : Application
;AVR Core Clock frequency: 20.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <io.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;// Declare your global variables here
;char arrayOre[24]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
;char contorIn=0;
;char contorSec=0;
;char contorMin=0;
;char contorHr=0;
;char val_afisor;
;char cont_pulse=0;
;char totalConsum=0;
;char consZi=0;
;char j=0;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0026 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0027 // Reinitialize Timer 0 value
; 0000 0028 //TCNT0=0x3C;   //acesta este valoarea timerului pentru a obtine o perioada de 10ms.
; 0000 0029 //vom folosi pentru simulare un artificiu deoarece simulatorul merge in 4 MHz
; 0000 002A TCNT0=0x63;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 002B // Place your code here
; 0000 002C contorIn=contorIn+1;
;PCODE: $00000011 VOL: 0
; 0000 002D if(contorIn%25==0){
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002E // contorIn pentru 4MHz si TCNT0 ales numara o secunda odata ce ajunge la valoarea de 25
; 0000 002F //pentru 20Mhz ar trebui sa fie 100
; 0000 0030     contorSec=contorSec+1;
;PCODE: $00000018 VOL: 0
; 0000 0031     contorIn=0;
;PCODE: $00000019 VOL: 0
; 0000 0032 }
; 0000 0033 if(contorSec%60==0){
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0034     contorMin=contorMin+1;
;PCODE: $00000021 VOL: 0
; 0000 0035     contorSec=0;
;PCODE: $00000022 VOL: 0
; 0000 0036 }
; 0000 0037 if(contorMin%60==0){
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0038 contorHr=contorHr+1;
;PCODE: $0000002A VOL: 0
; 0000 0039 contorMin=0;
;PCODE: $0000002B VOL: 0
; 0000 003A }
; 0000 003B // o sa ne caculeze consumul la sfarsitul zilei si apoi o sa ne
; 0000 003C // treaca in cealalta zi
; 0000 003D  if(contorHr%24==0){
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 003E  consZi=0;
;PCODE: $00000033 VOL: 0
; 0000 003F  for(j=0;j<24;j++)
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0040  {consZi=consZi+arrayOre[j];
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0041  }
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0042   contorHr=0;
;PCODE: $00000045 VOL: 0
; 0000 0043   }
; 0000 0044 }
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;void LED_Stare_Curent(void)
; 0000 0046 {
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0047  if(PINC.2==1){   //schimba in port D2, D3, D4
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0048  PORTD.4=1;  // reprezinta o valoare scauzta 10mA-1.5ish A
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0049  PORTD.3=0;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 004A  PORTD.2=0;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 004B  }else if(PINC.3==1){
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 004C  PORTD.4=0;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 004D  PORTD.3=1;     // reprezinta o valoare medie  1.501 A -3.5 A
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 004E  PORTD.2=0;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004F  }else if(PINC.4==1){
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 0050  PORTD.4=0;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0051  PORTD.3=0;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0052  PORTD.2=1;   // reprezinta o valoare mare 3.501 A- 5A
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0053 
; 0000 0054  }
; 0000 0055  else {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0056  PORTD.4=0;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0057  PORTD.3=0;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0058  PORTD.2=0;// nu ne afiseaza niciun led
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0059  }
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 005A //aceasta functie preia valoarea trimisa de dsp( valorile sunt intre anumite nivele
; 0000 005B }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;char cifra0;
;char cifra1;
;
;void Afisor_2Cifre(char value){
; 0000 005F void Afisor_2Cifre(char value){
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0060 //vei lua PORTA complet, PortD7,portB 0->4 14 biti pentur 2 cifre 7 biti din port A o sai setezi pentru prima cifra rest ...
; 0000 0061 //tine minte afisorul este pe logica inversa
; 0000 0062  cifra0=value%10;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;	value -> R17
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0063  cifra1=(value/10)%10;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0064 if(cifra0==0)
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0065 {
; 0000 0066 PORTA.0=0;  //pin 17 4E
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0067 PORTA.1=0;  //pin 18 4D
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0068 PORTA.2=0;  //pin 19 4C
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0069 PORTA.3=0;  //pin 20 4B
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 006A PORTA.4=0;  //pin 20 4A
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 006B PORTA.5=0;  //pin 20 4F
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 006C PORTA.6=1;  //pin 20 4G
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 006D }
; 0000 006E else if(cifra0==1)
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 006F {
; 0000 0070 PORTA.0=1;  //pin 17 4E
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
; 0000 0071 PORTA.1=1;  //pin 18 4D
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0072 PORTA.2=0;  //pin 19 4C
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0073 PORTA.3=0;  //pin 20 4B
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0074 PORTA.4=1;  //pin 20 4A
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0075 PORTA.5=1;  //pin 20 4F
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0076 PORTA.6=1;  //pin 20 4G
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0000 0077 }
; 0000 0078 else if(cifra0==2)
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0079 {PORTA.0=0;  //pin 17 4E
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 007A PORTA.1=0;  //pin 18 4D
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 007B PORTA.2=1;  //pin 19 4C
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 007C PORTA.3=0;  //pin 20 4B
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
; 0000 007D PORTA.4=0;  //pin 20 4A
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 007E PORTA.5=1;  //pin 20 4F
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 007F PORTA.6=0;  //pin 20 4G
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
; 0000 0080 }
; 0000 0081 else if(cifra0==3)
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0082 {PORTA.0=1;  //pin 17 4E
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 0083 PORTA.1=0;  //pin 18 4D
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0084 PORTA.2=0;  //pin 19 4C
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
; 0000 0085 PORTA.3=0;  //pin 20 4B
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 0086 PORTA.4=0;  //pin 20 4A
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 0087 PORTA.5=1;  //pin 20 4F
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0088 PORTA.6=0;  //pin 20 4G
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 0089 }
; 0000 008A else if(cifra0==4)
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 008B {PORTA.0=1;  //pin 17 4E
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 008C PORTA.1=1;  //pin 18 4D
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
; 0000 008D PORTA.2=0;  //pin 19 4C
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 008E PORTA.3=0;  //pin 20 4B
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 008F PORTA.4=1;  //pin 20 4A
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 0090 PORTA.5=0;  //pin 20 4F
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 0091 PORTA.6=0;  //pin 20 4G
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 0092 }
; 0000 0093 else if(cifra0==5)
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0094 {PORTA.0=1;  //pin 17 4E
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0095 PORTA.1=0;  //pin 18 4D
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
; 0000 0096 PORTA.2=0;  //pin 19 4C
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 0097 PORTA.3=1;  //pin 20 4B
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 0098 PORTA.4=0;  //pin 20 4A
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0099 PORTA.5=0;  //pin 20 4F
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 009A PORTA.6=0;  //pin 20 4G
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 009B }
; 0000 009C else if(cifra0==6)
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 009D {PORTA.0=0;  //pin 17 4E
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 009E PORTA.1=0;  //pin 18 4D
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
; 0000 009F PORTA.2=0;  //pin 19 4C
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 00A0 PORTA.3=1;  //pin 20 4B
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 00A1 PORTA.4=0;  //pin 20 4A
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00A2 PORTA.5=0;  //pin 20 4F
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 00A3 PORTA.6=0;  //pin 20 4G
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 00A4 }
; 0000 00A5 else if(cifra0==7)
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00A6 {PORTA.0=1;  //pin 17 4E
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00A7 PORTA.1=1;  //pin 18 4D
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 00A8 PORTA.2=0;  //pin 19 4C
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 00A9 PORTA.3=0;  //pin 20 4B
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00AA PORTA.4=0;  //pin 20 4A
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 00AB PORTA.5=1;  //pin 20 4F
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
; 0000 00AC PORTA.6=1;  //pin 20 4G
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 00AD }
; 0000 00AE else if(cifra0==8)
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 00AF {PORTA.0=0;  //pin 17 4E
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 00B0 PORTA.1=0;  //pin 18 4D
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 00B1 PORTA.2=0;  //pin 19 4C
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00B2 PORTA.3=0;  //pin 20 4B
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00B3 PORTA.4=0;  //pin 20 4A
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00B4 PORTA.5=0;  //pin 20 4F
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
; 0000 00B5 PORTA.6=0;  //pin 20 4G
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
; 0000 00B6 }
; 0000 00B7 else if(cifra0==9)
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
; 0000 00B8 {PORTA.0=1;  //pin 17 4E
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 00B9 PORTA.1=0;  //pin 18 4D
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 00BA PORTA.2=0;  //pin 19 4C
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
; 0000 00BB PORTA.3=0;  //pin 20 4B
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
; 0000 00BC PORTA.4=0;  //pin 20 4A
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
; 0000 00BD PORTA.5=0;  //pin 20 4F
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00BE PORTA.6=0;  //pin 20 4G
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
; 0000 00BF }
; 0000 00C0 if(cifra1==0)
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00C1 {
; 0000 00C2 PORTA.7=0;  // pin 13 3E
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 00C3 PORTD.7=0;  // pin 14 3D
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00C4 PORTB.0=0;  // pin 15 3C
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00C5 PORTB.1=0;  // pin 24 3B
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00C6 PORTB.2=0;  // pin 25 3A
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 00C7 PORTB.3=0;  // pin 26 3F
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
; 0000 00C8 PORTB.4=1;  // pin 27 3G
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 00C9 }
; 0000 00CA else if(cifra1==1)
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
; 0000 00CB {
; 0000 00CC PORTA.7=1;  // pin 13 3E
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 00CD PORTD.7=1;  // pin 14 3D
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
; 0000 00CE PORTB.0=0;  // pin 15 3C
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 00CF PORTB.1=0;  // pin 24 3B
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 00D0 PORTB.2=1;  // pin 25 3A
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 00D1 PORTB.3=1;  // pin 26 3F
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00D2 PORTB.4=1;  // pin 27 3G
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
; 0000 00D3 }
; 0000 00D4 else if(cifra1==2)
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00D5 {
; 0000 00D6 PORTA.7=0;  // pin 13 3E
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00D7 PORTD.7=0;  // pin 14 3D
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00D8 PORTB.0=1;  // pin 15 3C
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
; 0000 00D9 PORTB.1=0;  // pin 24 3B
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00DA PORTB.2=0;  // pin 25 3A
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
; 0000 00DB PORTB.3=1;  // pin 26 3F
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00DC PORTB.4=0;  // pin 27 3G
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00DD }
; 0000 00DE else if(cifra1==3)
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
; 0000 00DF {
; 0000 00E0 PORTA.7=1;  // pin 13 3E
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
; 0000 00E1 PORTD.7=0;  // pin 14 3D
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
; 0000 00E2 PORTB.0=0;  // pin 15 3C
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
; 0000 00E3 PORTB.1=0;  // pin 24 3B
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00E4 PORTB.2=0;  // pin 25 3A
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
; 0000 00E5 PORTB.3=1;  // pin 26 3F
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
; 0000 00E6 PORTB.4=0;  // pin 27 3G
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00E7 }
; 0000 00E8 else if(cifra1==4)
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
; 0000 00E9 {
; 0000 00EA PORTA.7=1;  // pin 13 3E
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00EB PORTD.7=1;  // pin 14 3D
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00EC PORTB.0=0;  // pin 15 3C
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00ED PORTB.1=0;  // pin 24 3B
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00EE PORTB.2=1;  // pin 25 3A
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00EF PORTB.3=0;  // pin 26 3F
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
; 0000 00F0 PORTB.4=0;  // pin 27 3G
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00F1 }
; 0000 00F2 else if(cifra1==5)
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
; 0000 00F3 {
; 0000 00F4 PORTA.7=1;  // pin 13 3E
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00F5 PORTD.7=0;  // pin 14 3D
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00F6 PORTB.0=0;  // pin 15 3C
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 00F7 PORTB.1=1;  // pin 24 3B
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00F8 PORTB.2=0;  // pin 25 3A
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 00F9 PORTB.3=0;  // pin 26 3F
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 00FA PORTB.4=0;  // pin 27 3G
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
; 0000 00FB }
; 0000 00FC else if(cifra1==6)
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00FD {
; 0000 00FE PORTA.7=0;  // pin 13 3E
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 00FF PORTD.7=0;  // pin 14 3D
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0100 PORTB.0=0;  // pin 15 3C
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0101 PORTB.1=1;  // pin 24 3B
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 0102 PORTB.2=0;  // pin 25 3A
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 0103 PORTB.3=0;  // pin 26 3F
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 0104 PORTB.4=0;  // pin 27 3G
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 0105 }
; 0000 0106 else if(cifra1==7)
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 0107 {
; 0000 0108 PORTA.7=1;  // pin 13 3E
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 0109 PORTD.7=1;  // pin 14 3D
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 010A PORTB.0=0;  // pin 15 3C
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 010B PORTB.1=0;  // pin 24 3B
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
; 0000 010C PORTB.2=0;  // pin 25 3A
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
; 0000 010D PORTB.3=1;  // pin 26 3F
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
; 0000 010E PORTB.4=1;  // pin 27 3G
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
; 0000 010F }
; 0000 0110 else if(cifra1==8)
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 0111 {
; 0000 0112 PORTA.7=1;  // pin 13 3E
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0113 PORTD.7=1;  // pin 14 3D
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 0114 PORTB.0=1;  // pin 15 3C
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 0115 PORTB.1=1;  // pin 24 3B
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0116 PORTB.2=1;  // pin 25 3A
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 0117 PORTB.3=1;  // pin 26 3F
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0118 PORTB.4=1;  // pin 27 3G
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 0119 }
; 0000 011A else if(cifra1==9)
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 011B {
; 0000 011C PORTA.7=1;  // pin 13 3E
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 011D PORTD.7=0;  // pin 14 3D
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
; 0000 011E PORTB.0=0;  // pin 15 3C
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
; 0000 011F PORTB.1=0;  // pin 24 3B
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
; 0000 0120 PORTB.2=0;  // pin 25 3A
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 0121 PORTB.3=0;  // pin 26 3F
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
; 0000 0122 PORTB.4=0;  // pin 27 3G
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
; 0000 0123 }
; 0000 0124 }
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;
;
;char ValAfisorButon(void){
; 0000 0127 char ValAfisorButon(void){
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0128 char SUMA;
; 0000 0129 char i;
; 0000 012A if(PIND.5==0)//buton apasat   butonul este portD5, cu portD6 allways on pentru LED
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;	SUMA -> R17
;	i -> R16
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
; 0000 012B  {// ne va afisa ultimele 24 de ore de consum
; 0000 012C   SUMA=0;
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 012D   if(consZi==0)
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
; 0000 012E   {for(i=0;i<contorHr;i++)
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 012F   {   SUMA=SUMA+arrayOre[i];
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 0130   // ne va arata consumul pana la ora curenta de la pornire
; 0000 0131   }
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0132   }
; 0000 0133   else{
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 0134   SUMA=consZi;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0135   }
;PCODE: $00000239 VOL: 0
; 0000 0136   return val_afisor=SUMA;
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 0137   //sfarsitul buton apasat
; 0000 0138  }
; 0000 0139    else
;PCODE: $0000023E VOL: 0
; 0000 013A   {SUMA=totalConsum;
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 013B         }
;PCODE: $00000241 VOL: 0
; 0000 013C    return val_afisor=SUMA;
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 013D   }
;PCODE: $00000246 VOL: 0
;
;
;
;void main(void)
; 0000 0142 {
;PCODE: $00000247 VOL: 0
; 0000 0143 // Declare your local variables here
; 0000 0144  //DSP ar trebui sa trimita ceva de genul 00100 pentru un puls simplu
; 0000 0145 // Crystal Oscillator division factor: 1
; 0000 0146 #pragma optsize-
; 0000 0147 CLKPR=(1<<CLKPCE);
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
; 0000 0148 CLKPR=(0<<CLKPCE) | (0<<CLKPS3) | (0<<CLKPS2) | (0<<CLKPS1) | (0<<CLKPS0);
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 0149 #ifdef _OPTIMIZE_SIZE_
; 0000 014A #pragma optsize+
; 0000 014B #endif
; 0000 014C 
; 0000 014D // Input/Output Ports initialization
; 0000 014E // Port A initialization
; 0000 014F // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0150 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 0151 // State: Bit7=1 Bit6=1 Bit5=1 Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 0152 PORTA=(1<<PORTA7) | (1<<PORTA6) | (1<<PORTA5) | (1<<PORTA4) | (1<<PORTA3) | (1<<PORTA2) | (1<<PORTA1) | (1<<PORTA0);
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 0153 
; 0000 0154 // Port B initialization
; 0000 0155 // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0156 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 0157 // State: Bit7=T Bit6=T Bit5=T Bit4=1 Bit3=1 Bit2=1 Bit1=1 Bit0=1
; 0000 0158 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (1<<PORTB4) | (1<<PORTB3) | (1<<PORTB2) | (1<<PORTB1) | (1<<PORTB0);
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 0159 
; 0000 015A // Port C initialization
; 0000 015B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
; 0000 015C DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 015D // State: Bit7=P Bit6=P Bit5=P Bit4=P Bit3=P Bit2=P Bit1=P Bit0=P
; 0000 015E PORTC=(1<<PORTC7) | (1<<PORTC6) | (1<<PORTC5) | (1<<PORTC4) | (1<<PORTC3) | (1<<PORTC2) | (1<<PORTC1) | (1<<PORTC0);
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 015F 
; 0000 0160 // Port D initialization
; 0000 0161 // Function: Bit7=Out Bit6=In Bit5=In Bit4=Out Bit3=Out Bit2=Out Bit1=In Bit0=In
; 0000 0162 DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (0<<DDD1) | (0<<DDD0);
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
; 0000 0163 // State: Bit7=1 Bit6=T Bit5=T Bit4=1 Bit3=1 Bit2=1 Bit1=T Bit0=T
; 0000 0164 PORTD=(1<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (1<<PORTD4) | (1<<PORTD3) | (1<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
; 0000 0165 
; 0000 0166 // Timer/Counter 0 initialization
; 0000 0167 // Clock source: System Clock
; 0000 0168 // Clock value: 19.531 kHz
; 0000 0169 // Mode: Normal top=0xFF
; 0000 016A // OC0A output: Disconnected
; 0000 016B // OC0B output: Disconnected
; 0000 016C // Timer Period: 10.035 ms
; 0000 016D TCCR0A=(0<<COM0A1) | (0<<COM0A0) | (0<<COM0B1) | (0<<COM0B0) | (0<<WGM01) | (0<<WGM00);
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 016E TCCR0B=(0<<WGM02) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 016F TCNT0=0x3C;
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 0170 OCR0A=0x00;
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 0171 OCR0B=0x00;
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 0172 
; 0000 0173 // Timer/Counter 1 initialization
; 0000 0174 // Clock source: System Clock
; 0000 0175 // Clock value: Timer1 Stopped
; 0000 0176 // Mode: Normal top=0xFFFF
; 0000 0177 // OC1A output: Disconnected
; 0000 0178 // OC1B output: Disconnected
; 0000 0179 // Noise Canceler: Off
; 0000 017A // Input Capture on Falling Edge
; 0000 017B // Timer1 Overflow Interrupt: Off
; 0000 017C // Input Capture Interrupt: Off
; 0000 017D // Compare A Match Interrupt: Off
; 0000 017E // Compare B Match Interrupt: Off
; 0000 017F TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 0180 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
; 0000 0181 TCNT1H=0x00;
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 0182 TCNT1L=0x00;
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 0183 ICR1H=0x00;
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 0184 ICR1L=0x00;
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 0185 OCR1AH=0x00;
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 0186 OCR1AL=0x00;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0187 OCR1BH=0x00;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 0188 OCR1BL=0x00;
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
; 0000 0189 
; 0000 018A // Timer/Counter 2 initialization
; 0000 018B // Clock source: System Clock
; 0000 018C // Clock value: Timer2 Stopped
; 0000 018D // Mode: Normal top=0xFF
; 0000 018E // OC2A output: Disconnected
; 0000 018F // OC2B output: Disconnected
; 0000 0190 ASSR=(0<<EXCLK) | (0<<AS2);
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
; 0000 0191 TCCR2A=(0<<COM2A1) | (0<<COM2A0) | (0<<COM2B1) | (0<<COM2B0) | (0<<WGM21) | (0<<WGM20);
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 0192 TCCR2B=(0<<WGM22) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
; 0000 0193 TCNT2=0x00;
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
; 0000 0194 OCR2A=0x00;
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 0195 OCR2B=0x00;
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
; 0000 0196 
; 0000 0197 // Timer/Counter 0 Interrupt(s) initialization
; 0000 0198 TIMSK0=(0<<OCIE0B) | (0<<OCIE0A) | (1<<TOIE0);
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 0199 
; 0000 019A // Timer/Counter 1 Interrupt(s) initialization
; 0000 019B TIMSK1=(0<<ICIE1) | (0<<OCIE1B) | (0<<OCIE1A) | (0<<TOIE1);
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
; 0000 019C 
; 0000 019D // Timer/Counter 2 Interrupt(s) initialization
; 0000 019E TIMSK2=(0<<OCIE2B) | (0<<OCIE2A) | (0<<TOIE2);
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
; 0000 019F 
; 0000 01A0 // External Interrupt(s) initialization
; 0000 01A1 // INT0: Off
; 0000 01A2 // INT1: Off
; 0000 01A3 // INT2: Off
; 0000 01A4 // Interrupt on any change on pins PCINT0-7: Off
; 0000 01A5 // Interrupt on any change on pins PCINT8-15: Off
; 0000 01A6 // Interrupt on any change on pins PCINT16-23: Off
; 0000 01A7 // Interrupt on any change on pins PCINT24-31: Off
; 0000 01A8 EICRA=(0<<ISC21) | (0<<ISC20) | (0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
; 0000 01A9 EIMSK=(0<<INT2) | (0<<INT1) | (0<<INT0);
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
; 0000 01AA PCICR=(0<<PCIE3) | (0<<PCIE2) | (0<<PCIE1) | (0<<PCIE0);
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 01AB 
; 0000 01AC // USART0 initialization
; 0000 01AD // USART0 disabled
; 0000 01AE UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (0<<RXEN0) | (0<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 01AF 
; 0000 01B0 // USART1 initialization
; 0000 01B1 // USART1 disabled
; 0000 01B2 UCSR1B=(0<<RXCIE1) | (0<<TXCIE1) | (0<<UDRIE1) | (0<<RXEN1) | (0<<TXEN1) | (0<<UCSZ12) | (0<<RXB81) | (0<<TXB81);
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 01B3 
; 0000 01B4 // Analog Comparator initialization
; 0000 01B5 // Analog Comparator: Off
; 0000 01B6 // The Analog Comparator's positive input is
; 0000 01B7 // connected to the AIN0 pin
; 0000 01B8 // The Analog Comparator's negative input is
; 0000 01B9 // connected to the AIN1 pin
; 0000 01BA ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 01BB ADCSRB=(0<<ACME);
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
; 0000 01BC // Digital input buffer on AIN0: On
; 0000 01BD // Digital input buffer on AIN1: On
; 0000 01BE DIDR1=(0<<AIN0D) | (0<<AIN1D);
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
; 0000 01BF 
; 0000 01C0 // ADC initialization
; 0000 01C1 // ADC disabled
; 0000 01C2 ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 01C3 
; 0000 01C4 // SPI initialization
; 0000 01C5 // SPI disabled
; 0000 01C6 SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 01C7 
; 0000 01C8 // TWI initialization
; 0000 01C9 // TWI disabled
; 0000 01CA TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
; 0000 01CB 
; 0000 01CC // Globally enable interrupts
; 0000 01CD #asm("sei")
;PCODE: $000002A2 VOL: 0
; 0000 01CE PIND.6=1;
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 01CF while (1)
;PCODE: $000002A5 VOL: 0
; 0000 01D0       {
; 0000 01D1       LED_Stare_Curent();
;PCODE: $000002A6 VOL: 0
; 0000 01D2       if(PINC.0==1 )
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 01D3       {
; 0000 01D4         cont_pulse=0;
;PCODE: $000002AA VOL: 0
; 0000 01D5         while(PINC.0!=0)
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
; 0000 01D6           {if(PINC.1==1)
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
; 0000 01D7             {
; 0000 01D8             cont_pulse=cont_pulse+1;
;PCODE: $000002B2 VOL: 0
; 0000 01D9             }
; 0000 01DA           }
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
; 0000 01DB       }
; 0000 01DC       totalConsum=totalConsum+cont_pulse;
;PCODE: $000002B6 VOL: 0
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
; 0000 01DD       arrayOre[contorHr]= arrayOre[contorHr]+cont_pulse;
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 01DE       Afisor_2Cifre(ValAfisorButon());
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
; 0000 01DF       }
;PCODE: $000002C5 VOL: 0
;PCODE: $000002C6 VOL: 0
; 0000 01E0 }
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
